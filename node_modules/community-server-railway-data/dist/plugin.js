var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import gatherStations from "./stations/gatherStations.js";
export default function data(config) {
    var _a;
    config.filterUngrouped = (_a = config.filterUngrouped) !== null && _a !== void 0 ? _a : false;
    return {
        name: "data",
        enforce: "pre",
        resolveId(source) {
            if (source === "community-server-railway-data") {
                return "community-server-railway-data";
            }
        },
        load(id) {
            return __awaiter(this, void 0, void 0, function* () {
                if (id === "community-server-railway-data") {
                    const stations = yield gatherStations(config);
                    return `export const stations = ${JSON.stringify(stations)}`;
                }
            });
        },
    };
}
